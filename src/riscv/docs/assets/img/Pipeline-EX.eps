%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 281.000000 382.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13 (Build 17A365) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 281 382
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 281 382
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /E put
dup 34 /X put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<


BE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/E 1 def
/X 2 def
/uni2B90 3 def
/uni2B91 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4174458 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7882B3267FBEDEB6776297FEA99C681B11228C21FCD8CEF48BA467B0450225729846B0141D233872E403C84738E77CFF01262ACF646D3F256869E2C58CBAA65C91E70B506A031C1E604658F5BA7A320652AD372B338B09C21A4B94E7A65D434BE0BCBFDE9E9028E2DCEAD537612C29CDF97BA358E8822ACD4A8ACAB9E13D01E715BBE6D10A9309C82CFB8C52F695967F083E874B917BD7F0EF49A767F67ECC2C6AFA2C250EF2F80872463FE436D86FC6119F12234152EAE772424EC005F83224112225D6BD1C2CCF8A8C98BD81FFA63F19569CD3E745730A3682D8DEF948E72E507A2B5C6034E64F713E3CC662C427FE5E0766318CD1525DD8927BEC68844BC41F53CF79613A9F47E03FC0CC1ED313AFDD64B1DD0775804F9D938E1AC58CCD6C2D54B56DF85784515C35CD5242B56B47FD85D293B9841211BBDEA4979BC2215F8543A539BF124287C1033BFB920DBDA4C5BD92A36BE8C09EF2C8711DD8240B79EEEC0578EF7EE3E438D66808E8914E0E83F6F5C94CD07ECB5E1EEF14F88372173E916438A8E88B3102943B058BF026F3170E556AC0CB18763641BA2C6ACBEC24D883F6CC08B281706D2FC6D7401AA27A4B2CFA927D794FD66BE70B643E82D282CB32A46051125C69A8C4937DA70724A869CD5CE5550D9B686E596121F063FA67EC91DC4E1D6A92B99BE95E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /e put
dup 34 /x put
dup 35 /underscore put
dup 36 /b put
dup 37 /u put
dup 38 /l put
dup 39 /s put
dup 40 /d put
dup 41 /i put
dup 42 /v put
dup 43 /m put
dup 44 /a put
dup 45 /t put
dup 46 /r put
dup 47 /L put
dup 48 /o put
dup 49 /space put
dup 50 /S put
dup 51 /T put
dup 52 /slash put
dup 53 /F put
dup 54 /D put
dup 55 /C put
dup 56 /A put
dup 57 /H put
dup 58 /E put
dup 59 /M put
dup 60 /U put
dup 61 /B put
dup 62 /n put
dup 63 /c put
dup 64 /h put
dup 65 /fl put
dup 66 /p put
dup 67 /w put
dup 68 /hyphen put
dup 69 /f put
dup 70 /R put
dup 71 /O put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<









00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/slash 3 def
/A 4 def
/B 5 def
/C 6 def
/D 7 def
/E 8 def
/F 9 def
/H 10 def
/L 11 def
/M 12 def
/O 13 def
/R 14 def
/S 15 def
/T 16 def
/U 17 def
/underscore 18 def
/a 19 def
/b 20 def
/c 21 def
/d 22 def
/e 23 def
/f 24 def
/h 25 def
/i 26 def
/l 27 def
/m 28 def
/n 29 def
/o 30 def
/p 31 def
/r 32 def
/s 33 def
/t 34 def
/u 35 def
/v 36 def
/w 37 def
/x 38 def
/fl 39 def
/uni2B91 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec



583E9759815E8C282E61CCC0F164D41016E110EA07A00A8C27F7E8314D5C639D098DC49EBAA610074D207A377CB0CDC1E3D862D5BB56E6EC96CAE6A1F6D0BBFE1FE73EBDD08105ABFF2888F1B8A7347CD58AE1A5CE39D8E46594314A824712D1DF19CF5A544B607F1325DF95F9F0EE4625AE043FBF44571B14B24FBD468590F270A6B2CC9D600DD18E47F5B4F111D07E97215C5B880238D8575280185CF7D99DF8581E1F22F9136D344B51F25D2EFDF7793C94D730771AD39ECD1EF01AD89FBF03ECC8A1F0719228E5F759D85165FF0F421602AE8CFD1EFD0456E9E763CAD6F29A01E01E6AB0FCFEE674FF4CB74D6282CEE5282F6EF5B220FB896286143A976DB36862F8FD05BB45FC63E94AAFAE86727C171CF45735217E95475D28D6C551EB831E7AC8D091D9BD9ABFABE90037DFB9121977C2DC1BFDCBE3A5FABBBFE87EBF136A7FCA41DCE132785D3702603133F7AEBF31EB3449E002F114EA63771DAB8FC26E723AFFDA73802D265EBD890C46CA0BD08B8240C4AE270737FE86C1825AB4E15F5309F6AD274CC57D2E40FDC706F5037DE41EDB925242E8A6EA92AE0B5AB58C738F9C6EAEE48D0BA68DD867AB9F9C06BE011A00E77645E5D7CA0074EC57D9C31A12B87091B4671CBDB20FB7E9C98C81C11C62BA9A851EC827C3F1BEB3488B206533242135B8D40118D83EDF26D3D7CE5E54BDEAD3D2EBC9A8A03A05D6D89ACA60518C5D56357E31197282408523DCFD7CE9F54E561E5D0F387EC71AA1F4979137551EDB089060946A637D5CD1F75DBAE7636DF9994D3F1F743717EB0C4F6C9731D58D13A248F8C12F3B40E5F37330CF9CD7F90BD1078C1ED79EB246363E3673FFBA76FD0EBD4A38A1FE043EBE987253373BCC66131BA1E2BD4031172A42614B5C6C7DC23FF1E30581514F9059E9CFB678719630138888D72CE9BCD8F5270EBFF3F0F8695126CE6B4D5DDFFF9D97FFC511CDCC6D0EDC3117F2F89A1C519704D211F418212EA07399A5E253ADB02470753174EF9C7B8D1D041B8E5BB143C9E52DC70496D179DA248EC8979437E286A65CCCA19E36330DB2034036059205A2FC56D87EC2D030ADE06BC3CF601B967108D562DE65A99FB6E584F60AC62B4DE823F03176798EBB5B68E9E6E23A06CF4DA54DD46E1B2BF15EE70E3E191132BF3A7CE2A6AF7442F7C9BFAA57D5C8D85E19091CF62E84338282A5D0CFD5E3073C92D4E29F93AF2FB57CAC81A9502F172204062DFF0B628B64C256D37BC4C3D11814F3C8234DB82C1D71B8B547B2C1A759A12221257E63DC1ED1B533F1F3A26052683C97CAFE12B8E98BF1CD83C146996AF2C937A38D2BD8EE84B889F0A2B90F5900C3D0A6F4B976064BAB74ECDD369072E4F1348B2FFB7E73F6AE40F5AE7FDE1D1B0926FC5CB2EF8DC46A91D3A24CBCE24AA9CC738427AA0036F6752B42984E84831D

38E361A5FFD5CDA1BA50EE8744099A410EE8D4ABAC239386D49659DC45CD2E4AFF6E679423B87501B0FC90A0CB31F6DA39EEC9E5DA3890922F363B2CF69D555AE325FB7FD58AD9428BE2BA808DE9076748D7638E797B97C074C58D8E66FE5FB895CB2CF6859A7EC28706D51F41D64FC8F4A1ADB92AEDA27082320F80EEFD75C9B63A23FA302BCF5BBDB0BAA7A4E9A49670B37376F322539CC0918282F3E0551BAC4AE6912559BA55BE094C883B05A91EF81C3ADCB204E72EC704698E01D07566A1E6E65DDFDD670A7B528509C722B0046CA6048BE9A30AEDD72A260AA3080CBA171B8502425A06E06A0673B95E17F617DCAF7CAE523CC09E1F363B843F900A70D623BE954AC419B1D30579371AAD5A8E861339432C2ED1C36D0638A4906D28A9F5CF7CD3E040DB29D40EE24CE162EABF0351471BEFC2AB1FAEBB621FA02996EDF23F2EB2507E43BD711774F975354B9ECB97297B2BC534E666DA79F403BF373EBB2C093A0DFDB727B66040FF86B7DBE6D4F205258E8EF0C30C959D541A472A89297F8B52491DA182480AA7726AB1ED5638DA622C1DA1721206E8F0439BDB6E0A601308A336A43014EEEE7B811E9024DDE942B65C7AAC1608CD6B5027CD9BDC76691BDEA70ADBF7E684F4BC8F3ED23B988BBFCD2AA24D112468F8A7071077CA94F4B1968F9BE88B73F7CFBDC316E426B65C5E577A863810FFE24C1EBFB8332BFC535D509F56018AE610C66597303145CE170453527BABAAFF900EE55C6AE739E2AED70B3C1721B2C9B3012F21C3372CF1D6799DE3AD5044CE4A55FBA24A114C32B2BAC84EEB9D1D19FA66BADAFA75AAB474989EF06D7795D3CD131F7621604FF77BAF8613514AF4AA429B3D1498369C9FE506AADC0708533534A30FC1950356D3BEDFF38964AC1FE4913EDFCDE84391703BE1D7CC9A1FF2EF218BB6917385BD0519C4B0B117AA6B10F99B5B526266E3194BAF48346E60858817F5856FA2C04198B5A364BB8888CED2E7804CAF5918D1C7F6C54B3AFBBB940D9C303B4AD0448215F7A80EFA6C85065CD4F8DEA9168699792949C5ACEFE98695D6BF79282EFA02D89D69D2AFF6C1515AD1F28D4DF779E3BBFBE756FA29FACCCA504A75A7CFE2D179DDF593C9EA7E7AC8E95C491012A39F68E7A4D93E803F3CA3BE9B7F816D1117F289E62EB895A0DB43785EA3EB98E573041885E0B75806D4C831103B7C6C102FDE30A3C2B099E12245CCADAFD90C2267F3B7E9B67E005F9BD4A2174CAF1F03CF0BD575A4ACA91E351B0919D30CF02C5137CF7C4444A12BE4D0879A0A430429AAD834BBF715E5AEDDA743F14CED714E5A82F0EFE85970770FA8864CCD98AEB1E38E616AF499624DC0D19190FDDC4A97AF5100EECC736D55D50F17CB5A89ED9DE7DE899001C2650E4FE5EB7EDAA275983262E8C8E97CA122946932EF33180CF5A218
2DEF327F176ED36ECC64B54E77FAADF7A99EEF630961657B8C77915653728EF3EA18DCC1909150D819DF2849D2CE12F86101AE7A66C6B72F3D2F7B9256714F397044857202597CB5AD0225397A28638F15BCAC674C908DB2F6308F0757CE6BBA5599F6D33816DD9714635CF208454DCBD12E4D1A30371FFAA9B88281A0E341AF3B25265BB3E1A8AC5149F6F9ADB46F12661852ADECAC0CAF6DE4A9E4EF79C1FCBA9D7F158C063E6345E5C8114C68AEB37AFFF8191B4A286EEE219BF5898EBC07A3D3299924B8C7534B1B14BA8FCC6ACE78AB1C6ACB38629605575A808BD776F4EF012539D4C7E816DF82A1E4236ADE84FAEDC8541658EBA840A0CB0AFA40F95875E8B80EC1815BE7413DA54A867500D8AB60DF6F93BB76D116E3F1A2CADC8215661149BD27EF112672793AD3066F4C6F7AAF16415EB286FB7309
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
q
0 0 281 382 rc
1 0 0 -1 -26 384 cm
35.96825 2.8346457 m
289.59476 2.8346457 l
289.59476 382.67715 l
35.96825 382.67715 l
h
35.96825 2.8346457 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 18.915627 372.21799 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6.522377 3.8549652 m
(!")[ 6.480000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
203.70705 59.302032 m
200.55388 60.349903 201.81128 69.171227 206.84128 67.666046 c
207.30795 70.600113 213.15717 70.123886 213.11893 67.666046 c
216.78656 70.809654 221.47357 64.541374 218.32979 61.39777 c
222.10219 59.873669 218.28218 51.662025 215.18617 53.033752 c
214.9384 50.74741 209.40369 49.947315 208.91789 53.033752 c
205.78386 49.737587 199.24889 54.805626 203.70705 59.302032 c
h
203.70705 59.302032 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
229.70705 324.69797 m
226.55388 323.65009 227.81128 314.82877 232.84128 316.33395 c
233.30795 313.39987 239.15717 313.87613 239.11893 316.33395 c
242.78656 313.19034 247.47357 319.45862 244.32979 322.60223 c
248.10219 324.12634 244.28218 332.33798 241.18617 330.96625 c
240.9384 333.25259 235.40369 334.05267 234.91789 330.96625 c
231.78386 334.26242 225.24889 329.19437 229.70705 324.69797 c
h
229.70705 324.69797 m
S
228.04773 320.37466 m
225.05852 318.96439 l
213.50676 318.96439 l
S
229.97887 331.18286 m
225.05852 338.37814 l
213.50676 338.37814 l
S
228.43842 326.60394 m
225.05852 328.74713 l
213.50676 328.74713 l
S
245.80255 324.39212 m
283.69467 324.39212 l
S
0 i
CM
261.69467 59.607868 m
257.69467 61.107868 l
257.69467 58.107868 l
h
261.69467 59.607868 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
287.69467 324.39212 m
283.69467 322.89212 l
283.69467 325.89212 l
h
287.69467 324.39212 m
S
1 J
1 j
0.60000002 i
230.49893 316.41782 m
225.05852 309.11353 l
213.50676 309.11353 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 243.92142 65.0205 cm
/F2.1[ 8 0 0 -8 0 0]sf
-22.576597 2.8880005 m
(!"#$%$$&!)[ 4.296000 4.144000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 169.83148 76.726334 cm
-23.672337 2.8880005 m
(&'%#$%$$&!)[ 1.776000 4.000000 4.448000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 169.48735 66.971474 cm
-23.624207 2.8880005 m
(\(\)*#$%$$&!)[ 4.744000 1.776000 4.000000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 168.45497 57.21661 cm
-25.119818 2.8880005 m
(+%&#$%$$&!)[ 6.824000 4.448000 1.776000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 169.48735 47.461746 cm
-23.624207 2.8880005 m
(,&%#$%$$&!)[ 4.296000 1.776000 4.448000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
206.55388 21.078112 m
209.70703 22.125978 208.44963 30.947302 203.41963 29.442125 c
202.95296 32.376194 197.10376 31.899961 197.142 29.442125 c
193.47437 32.585728 188.78734 26.317448 191.93114 23.173845 c
188.15874 21.649746 191.97874 13.438103 195.07474 14.809832 c
195.32251 12.523486 200.85722 11.723392 201.34302 14.809832 c
204.47707 11.513663 211.01204 16.581705 206.55388 21.078112 c
h
206.55388 21.078112 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
232.55388 362.92188 m
235.70703 361.87402 234.44963 353.0527 229.41963 354.55786 c
228.95296 351.62381 223.10376 352.10004 223.142 354.55786 c
219.47437 351.41428 214.78734 357.68256 217.93114 360.82614 c
214.15874 362.35025 217.97874 370.56189 221.07474 369.19016 c
221.32251 371.4765 226.85722 372.27661 227.34302 369.19016 c
230.47707 372.48633 237.01204 367.4183 232.55388 362.92188 c
h
232.55388 362.92188 m
S
234.2132 358.5986 m
237.20241 357.18829 l
248.75417 357.18829 l
S
232.28206 369.4068 m
237.20241 376.60205 l
248.75417 376.60205 l
S
233.82251 364.82788 m
237.20241 366.97107 l
248.75417 366.97107 l
S
216.45837 362.61606 m
178.81339 362.61606 l
S
0 i
CM
148.81339 21.383944 m
152.81339 19.883944 l
152.81339 22.883944 l
h
148.81339 21.383944 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
174.81339 362.61606 m
178.81339 364.11606 l
178.81339 361.11606 l
h
174.81339 362.61606 m
S
1 J
1 j
0.60000002 i
231.76199 354.64172 m
237.20241 347.33746 l
248.75417 347.33746 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 170.34152 26.796577 cm
-16.666285 2.8880005 m
(!"#'-,&&)[ 4.296000 4.144000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
1 0 0 -1 241.60622 38.502415 cm
-17.762026 2.8880005 m
(&'%#'-,&&)[ 1.776000 4.000000 4.448000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
1 0 0 -1 241.95035 28.747551 cm
-17.713896 2.8880005 m
(\(\)*#'-,&&)[ 4.744000 1.776000 4.000000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
1 0 0 -1 242.98274 18.992687 cm
-19.209505 2.8880005 m
(+%&#'-,&&)[ 6.824000 4.448000 1.776000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
1 0 0 -1 241.95035 9.2378244 cm
-17.713896 2.8880005 m
(,&%#'-,&&)[ 4.296000 1.776000 4.448000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
203.70705 266.11646 m
200.55388 267.16434 201.81128 275.98566 206.84128 274.48047 c
207.30795 277.41455 213.15717 276.93829 213.11893 274.48047 c
216.78656 277.62408 221.47357 271.3558 218.32979 268.21219 c
222.10219 266.68808 218.28218 258.47644 215.18617 259.84818 c
214.9384 257.56183 209.40369 256.76175 208.91789 259.84818 c
205.78386 256.552 199.24889 261.62006 203.70705 266.11646 c
h
203.70705 266.11646 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
229.70705 117.88354 m
226.55388 116.83567 227.81128 108.01435 232.84128 109.51952 c
233.30795 106.58546 239.15717 107.06169 239.11893 109.51952 c
242.78656 106.37592 247.47357 112.6442 244.32979 115.7878 c
248.10219 117.3119 244.28218 125.52355 241.18617 124.15182 c
240.9384 126.43816 235.40369 127.23826 234.91789 124.15182 c
231.78386 127.44799 225.24889 122.37995 229.70705 117.88354 c
h
229.70705 117.88354 m
S
228.04773 113.56025 m
225.05852 112.14996 l
213.50676 112.14996 l
S
229.97887 124.36845 m
225.05852 131.56371 l
213.50676 131.56371 l
S
228.43842 119.78953 m
225.05852 121.93272 l
213.50676 121.93272 l
S
245.80255 117.57771 m
283.69467 117.57771 l
S
0 i
CM
261.69467 266.4223 m
257.69467 267.9223 l
257.69467 264.9223 l
h
261.69467 266.4223 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
287.69467 117.57771 m
283.69467 116.07771 l
283.69467 119.07771 l
h
287.69467 117.57771 m
S
1 J
1 j
0.60000002 i
230.49893 109.60339 m
225.05852 102.29912 l
213.50676 102.29912 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 250.73181 271.83493 cm
-10.124233 2.8880005 m
(!"#.)[ 4.296000 4.144000 4.000000 0.000000 ] xS
1 0 0 -1 179.12299 283.54077 cm
-10.875844 2.8880005 m
(&'%#.)[ 1.776000 4.000000 4.448000 4.000000 0.000000 ] xS
1 0 0 -1 179.12299 273.78589 cm
-11.171844 2.8880005 m
(\(\)*#.)[ 4.744000 1.776000 4.000000 4.000000 0.000000 ] xS
1 0 0 -1 178.09061 264.03104 cm
-12.667454 2.8880005 m
(+%&#.)[ 6.824000 4.448000 1.776000 4.000000 0.000000 ] xS
1 0 0 -1 179.12299 254.27617 cm
-11.171844 2.8880005 m
(,&%#.)[ 4.296000 1.776000 4.448000 4.000000 0.000000 ] xS
/Cs1 SC
0.82890397 0.87453902 0.93533999 sc
CM
132.87952 332.39105 m
156.2912 332.39105 l
156.2912 293.37158 l
132.87952 293.37158 l
h
132.87952 332.39105 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
158.87952 51.608959 m
182.2912 51.608959 l
182.2912 90.62841 l
158.87952 90.62841 l
h
158.87952 51.608959 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 144.58536 312.88132 cm
-9.04 -2.223999 m
(/0,\(1)[ 4.448000 4.592000 4.296000 4.744000 0.000000 ] xS
-9.5559998 8 m
(2-0.!)[ 5.184000 2.520000 4.592000 2.520000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -26 384 cm
41.86824 38.138893 m
150.63916 37.952152 l
169.71768 37.952152 l
169.71768 45.708961 l
S
0 i
CM
143.71768 334.29105 m
145.21768 338.29105 l
142.21768 338.29105 l
h
143.71768 334.29105 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
169.71768 49.708961 m
171.21768 45.708961 l
168.21768 45.708961 l
h
169.71768 49.708961 m
S
CM
11.868247 345.85425 m
15.870816 344.36111 l
15.865665 347.36111 l
h
11.868247 345.85425 m
f
1 0 0 -1 -26 384 cm
37.868248 38.145763 m
41.870815 39.638893 l
41.865665 36.638897 l
h
37.868248 38.145763 m
S
1 J
1 j
0.60000002 i
182.2912 57.46188 m
231.53441 57.46188 l
S
0 i
CM
209.53441 326.53812 m
205.53441 328.03812 l
205.53441 325.03812 l
h
209.53441 326.53812 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 57.46188 m
231.53441 55.96188 l
231.53441 58.96188 l
h
235.53441 57.46188 m
S
1 J
1 j
0.60000002 i
182.2912 67.216743 m
231.53441 67.216743 l
S
0 i
CM
209.53441 316.78326 m
205.53441 318.28326 l
205.53441 315.28326 l
h
209.53441 316.78326 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 67.216743 m
231.53441 65.716743 l
231.53441 68.716743 l
h
235.53441 67.216743 m
S
1 J
1 j
0.60000002 i
182.2912 76.971603 m
231.53441 76.971603 l
S
0 i
CM
209.53441 307.02838 m
205.53441 308.52838 l
205.53441 305.52838 l
h
209.53441 307.02838 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 76.971603 m
231.53441 75.471603 l
231.53441 78.471603 l
h
235.53441 76.971603 m
S
/Cs2 SC
0 sc
1 0 0 -1 49.759785 350.87805 cm
-32.18782 2.8880005 m
(3045.0+167879:)[ 3.704000 4.592000 2.664000 4.592000 2.520000 4.592000 6.824000 2.224000 5.632000 5.776000 5.184000 5.776000 5.776000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -26 384 cm
42.068108 108.18716 m
155.4088 108.18716 l
162.56323 108.18716 l
162.56323 117.94203 l
S
0 i
CM
12.068108 275.81284 m
16.068108 274.31284 l
16.068108 277.31284 l
h
12.068108 275.81284 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
38.068108 108.18716 m
42.068108 109.68716 l
42.068108 106.68716 l
h
38.068108 108.18716 m
S
1 J
1 j
0.60000002 i
42.068108 98.432304 m
155.4088 98.432304 l
174.4873 98.432304 l
174.4873 117.94203 l
S
0 i
CM
12.068108 285.56769 m
16.068108 284.06769 l
16.068108 287.06769 l
h
12.068108 285.56769 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
38.068108 98.432304 m
42.068108 99.932304 l
42.068108 96.932304 l
h
38.068108 98.432304 m
S
0.82890397 0.87453902 0.93533999 sc
CM
132.87952 172.26361 m
156.2912 172.26361 l
156.2912 133.24416 l
132.87952 133.24416 l
h
132.87952 172.26361 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
158.87952 211.73639 m
182.2912 211.73639 l
182.2912 250.75584 l
158.87952 250.75584 l
h
158.87952 211.73639 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 144.58536 152.75389 cm
-6.5960002 2.8880005 m
(;%&)[ 6.968000 4.448000 0.000000 ] xS
/Cs1 SC
0.82890397 0.87453902 0.93533999 sc
CM
132.87952 125.58794 m
156.2912 125.58794 l
156.2912 86.568497 l
132.87952 86.568497 l
h
132.87952 125.58794 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
158.87952 258.41205 m
182.2912 258.41205 l
182.2912 297.43152 l
158.87952 297.43152 l
h
158.87952 258.41205 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 144.58536 106.07822 cm
-7.704 2.8880005 m
(8/<)[ 5.184000 4.448000 0.000000 ] xS
/Cs1 SC
0.82890397 0.87453902 0.93533999 sc
CM
132.87952 266.05798 m
156.2912 266.05798 l
156.2912 227.03851 l
132.87952 227.03851 l
h
132.87952 266.05798 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
158.87952 117.94203 m
182.2912 117.94203 l
182.2912 156.96149 l
158.87952 156.96149 l
h
158.87952 117.94203 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 144.58536 246.54825 cm
/F2.1[ 7 0 0 -7 0 0]sf
-11.214 2.9020004 m
(=.,>?@)[ 4.795000 2.331000 3.759000 3.892000 3.759000 0.000000 ] xS
/Cs1 SC
0.82890397 0.87453902 0.93533999 sc
CM
132.87952 219.23463 m
156.2912 219.23463 l
156.2912 180.21518 l
132.87952 180.21518 l
h
132.87952 219.23463 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
158.87952 164.76537 m
182.2912 164.76537 l
182.2912 203.78482 l
158.87952 203.78482 l
h
158.87952 164.76537 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 144.58536 199.7249 cm
/F2.1[ 8 0 0 -8 0 0]sf
-5.704 2.8880005 m
(6\)*)[ 5.632000 1.776000 0.000000 ] xS
/Cs1 SC
0.82890397 0.87453902 0.93533999 sc
CM
86.056183 97.026772 m
86.056183 58.00732 l
103.61494 64.510567 l
103.61494 90.523529 l
h
86.056183 97.026772 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
112.05618 286.97324 m
112.05618 325.99268 l
129.61493 319.48944 l
129.61493 293.47647 l
h
112.05618 286.97324 m
S
129.61493 306.48294 m
139.3698 306.48294 l
139.3698 73.465591 l
152.97952 73.465591 l
S
0 i
CM
130.97952 310.53439 m
126.97952 312.03439 l
126.97952 309.03439 l
h
130.97952 310.53439 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 73.465591 m
152.97952 71.965591 l
152.97952 74.965591 l
h
156.97952 73.465591 m
S
1 J
1 j
0.60000002 i
129.61493 351.35532 m
149.24409 351.35532 l
149.12466 81.061157 l
152.97952 81.061157 l
S
0 i
CM
130.97952 302.93884 m
126.97952 304.43884 l
126.97952 301.43884 l
h
130.97952 302.93884 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 81.061157 m
152.97952 79.561157 l
152.97952 82.561157 l
h
156.97952 81.061157 m
S
1 J
1 j
0.60000002 i
35.885853 274.0575 m
119.57782 274.0575 l
129.10919 274.0575 l
129.10919 64.400375 l
152.97952 64.400375 l
S
0 i
CM
130.97952 319.59961 m
126.97952 321.09961 l
126.97952 318.09961 l
h
130.97952 319.59961 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 64.400375 m
152.97952 62.900379 l
152.97952 65.900375 l
h
156.97952 64.400375 m
S
1 J
1 j
0.60000002 i
35.96825 264.26498 m
109.34204 264.26498 l
118.46169 264.26498 l
118.46169 61.363823 l
118.46169 54.862633 l
130.38576 54.862633 l
152.97952 54.862633 l
S
0 i
CM
130.97952 329.13736 m
126.97952 330.63736 l
126.97952 327.63736 l
h
130.97952 329.13736 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 54.862633 m
152.97952 53.362633 l
152.97952 56.362633 l
h
156.97952 54.862633 m
S
1 J
1 j
0.60000002 i
150.65605 152.88615 m
152.98083 152.93517 l
S
0 i
CM
130.97995 230.98051 m
127.01245 232.5645 l
126.94922 229.56516 l
h
130.97995 230.98051 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97995 153.01949 m
153.01245 151.4355 l
152.94922 154.43484 l
h
156.97995 153.01949 m
S
CM
124.23917 232.18353 m
124.81248 231.58553 124.79246 230.63599 124.19445 230.06268 c
123.59645 229.48936 122.64691 229.50938 122.0736 230.10739 c
121.5003 230.7054 121.52032 231.65494 122.11832 232.22824 c
122.71632 232.80154 123.66586 232.78152 124.23917 232.18353 c
f
1 0 0 -1 -26 384 cm
150.23917 151.81647 m
150.81247 152.41447 150.79245 153.36401 150.19446 153.93732 c
149.59645 154.51064 148.64691 154.49062 148.07361 153.89261 c
147.50029 153.2946 147.52031 152.34506 148.11832 151.77176 c
148.71632 151.19846 149.66586 151.21848 150.23917 151.81647 c
S
1 J
1 j
0.60000002 i
140.867 142.20435 m
152.99049 142.94493 l
S
0 i
CM
130.98306 240.81117 m
127.08196 242.55228 l
126.89904 239.55786 l
h
130.98306 240.81117 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.98306 143.18883 m
153.08195 141.44772 l
152.89903 144.44214 l
h
156.98306 143.18883 m
S
CM
114.49316 242.88113 m
115.04213 242.26073 114.98422 241.31274 114.36381 240.76376 c
113.7434 240.21478 112.79542 240.27269 112.24644 240.89311 c
111.69746 241.51352 111.75537 242.4615 112.37579 243.01048 c
112.99619 243.55946 113.94418 243.50154 114.49316 242.88113 c
f
1 0 0 -1 -26 384 cm
140.49315 141.11887 m
141.04213 141.73927 140.98422 142.68726 140.36382 143.23624 c
139.74339 143.78522 138.79541 143.72731 138.24644 143.10689 c
137.69746 142.48648 137.75537 141.5385 138.37578 140.98952 c
138.9962 140.44054 139.94418 140.49846 140.49315 141.11887 c
S
1 J
1 j
0.60000002 i
130.60919 133.57944 m
152.97952 133.556 l
S
0 i
CM
130.97952 250.4482 m
126.97795 251.944 l
126.9811 248.944 l
h
130.97952 250.4482 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 133.5518 m
152.97795 132.056 l
152.98109 135.056 l
h
156.97952 133.5518 m
S
CM
104.16875 251.48076 m
104.75514 250.89558 104.75614 249.94585 104.17097 249.35944 c
103.58579 248.77304 102.63605 248.77205 102.04965 249.35722 c
101.46325 249.94238 101.46226 250.89214 102.04742 251.47853 c
102.6326 252.06494 103.58234 252.06593 104.16875 251.48076 c
f
1 0 0 -1 -26 384 cm
130.16875 132.51924 m
130.75514 133.10442 130.75613 134.05415 130.17097 134.64056 c
129.5858 135.22696 128.63605 135.22795 128.04965 134.64278 c
127.46325 134.05762 127.46226 133.10786 128.04742 132.52147 c
128.6326 131.93506 129.58235 131.93407 130.16875 132.51924 c
S
1 J
1 j
0.60000002 i
119.96169 123.79448 m
152.97952 123.79488 l
S
0 i
CM
130.97952 260.20508 m
126.97954 261.70514 l
126.97951 258.70514 l
h
130.97952 260.20508 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 123.79492 m
152.97954 122.29488 l
152.97951 125.29488 l
h
156.97952 123.79492 m
S
CM
93.522369 261.26617 m
94.108147 260.68039 94.108131 259.73065 93.522339 259.14487 c
92.936546 258.55908 91.986801 258.55911 91.401024 259.1449 c
90.815239 259.73068 90.815254 260.68042 91.401047 261.2662 c
91.986839 261.85199 92.936584 261.85199 93.522369 261.26617 c
f
1 0 0 -1 -26 384 cm
119.52237 122.73381 m
120.10815 123.31961 120.10813 124.26936 119.52234 124.85513 c
118.93655 125.44091 117.9868 125.4409 117.40102 124.85511 c
116.81524 124.26932 116.81525 123.31956 117.40105 122.73379 c
117.98684 122.14801 118.93658 122.14803 119.52237 122.73381 c
S
1 J
1 j
0.60000002 i
150.62466 197.93375 m
152.97952 197.93663 l
S
0 i
CM
130.97952 186.05847 m
126.98136 187.56337 l
126.97769 184.56339 l
h
130.97952 186.05847 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 197.94153 m
152.98137 196.43663 l
152.97769 199.43661 l
h
156.97952 197.94153 m
S
CM
124.18661 187.12746 m
124.77168 186.54095 124.77052 185.5912 124.18402 185.00613 c
123.59752 184.42107 122.64777 184.42223 122.0627 185.00873 c
121.47763 185.59525 121.4788 186.54498 122.0653 187.13005 c
122.6518 187.71512 123.60155 187.71396 124.18661 187.12746 c
f
1 0 0 -1 -26 384 cm
150.18661 196.87254 m
150.77168 197.45905 150.77052 198.4088 150.18402 198.99387 c
149.59752 199.57893 148.64777 199.57777 148.0627 198.99127 c
147.47763 198.40475 147.47879 197.45502 148.06529 196.86995 c
148.65181 196.28488 149.60155 196.28604 150.18661 196.87254 c
S
1 J
1 j
0.60000002 i
150.62466 246.70805 m
152.97952 246.71094 l
S
0 i
CM
130.97952 137.28416 m
126.98136 138.78906 l
126.97769 135.78906 l
h
130.97952 137.28416 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 246.71584 m
152.98137 245.21094 l
152.97769 248.21094 l
h
156.97952 246.71584 m
S
CM
124.18661 138.35313 m
124.77168 137.76663 124.77052 136.81689 124.18402 136.23183 c
123.59752 135.64676 122.64777 135.64792 122.0627 136.23442 c
121.47763 136.82092 121.4788 137.77068 122.0653 138.35574 c
122.6518 138.94081 123.60155 138.93964 124.18661 138.35313 c
f
1 0 0 -1 -26 384 cm
150.18661 245.64687 m
150.77168 246.23337 150.77052 247.18311 150.18402 247.76817 c
149.59752 248.35324 148.64777 248.35208 148.0627 247.76558 c
147.47763 247.17908 147.47879 246.22932 148.06529 245.64426 c
148.65181 245.05919 149.60155 245.06036 150.18661 245.64687 c
S
1 J
1 j
0.60000002 i
150.62466 293.5314 m
152.97952 293.53427 l
S
0 i
CM
130.97952 90.460823 m
126.98136 91.965721 l
126.97769 88.965721 l
h
130.97952 90.460823 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 293.53918 m
152.98137 292.03427 l
152.97769 295.03427 l
h
156.97952 293.53918 m
S
CM
124.18661 91.5298 m
124.77168 90.943298 124.77052 89.993553 124.18402 89.408478 c
123.59752 88.82341 122.64777 88.824577 122.0627 89.411079 c
121.47763 89.997581 121.4788 90.947327 122.0653 91.532394 c
122.6518 92.117462 123.60155 92.116302 124.18661 91.5298 c
f
1 0 0 -1 -26 384 cm
150.18661 292.47021 m
150.77168 293.0567 150.77052 294.00644 150.18402 294.59152 c
149.59752 295.17657 148.64777 295.17542 148.0627 294.58893 c
147.47763 294.00241 147.47879 293.05267 148.06529 292.46759 c
148.65181 291.88254 149.60155 291.8837 150.18661 292.47021 c
S
1 J
1 j
0.60000002 i
140.8698 190.13844 m
152.97952 190.13144 l
S
0 i
CM
130.97952 193.87088 m
126.97865 195.36856 l
126.98039 192.36856 l
h
130.97952 193.87088 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 190.12912 m
152.97865 188.63144 l
152.98039 191.63144 l
h
156.97952 190.12912 m
S
CM
114.42984 194.92195 m
115.01597 194.33652 115.01652 193.38676 114.43107 192.80064 c
113.84563 192.21451 112.89587 192.21396 112.30975 192.79941 c
111.72363 193.38486 111.72308 194.33461 112.30853 194.92073 c
112.89397 195.50685 113.84372 195.5074 114.42984 194.92195 c
f
1 0 0 -1 -26 384 cm
140.42984 189.07805 m
141.01596 189.66348 141.01651 190.61324 140.43108 191.19936 c
139.84563 191.78549 138.89587 191.78604 138.30975 191.20059 c
137.72363 190.61514 137.72307 189.66539 138.30852 189.07927 c
138.89397 188.49315 139.84372 188.4926 140.42984 189.07805 c
S
1 J
1 j
0.60000002 i
140.8698 236.96179 m
152.97952 236.95477 l
S
0 i
CM
130.97952 147.04755 m
126.97865 148.54523 l
126.98039 145.54523 l
h
130.97952 147.04755 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 236.95245 m
152.97865 235.45477 l
152.98039 238.45477 l
h
156.97952 236.95245 m
S
CM
114.42984 148.09862 m
115.01597 147.51317 115.01652 146.56342 114.43107 145.97729 c
113.84563 145.39117 112.89587 145.39062 112.30975 145.97607 c
111.72363 146.56151 111.72308 147.51126 112.30853 148.09738 c
112.89397 148.68352 113.84372 148.68407 114.42984 148.09862 c
f
1 0 0 -1 -26 384 cm
140.42984 235.90138 m
141.01596 236.48683 141.01651 237.43658 140.43108 238.02271 c
139.84563 238.60883 138.89587 238.60938 138.30975 238.02393 c
137.72363 237.43849 137.72307 236.48874 138.30852 235.90262 c
138.89397 235.31648 139.84372 235.31593 140.42984 235.90138 c
S
1 J
1 j
0.60000002 i
140.8698 283.78513 m
152.97952 283.77811 l
S
0 i
CM
130.97952 100.2242 m
126.97865 101.72189 l
126.98039 98.721886 l
h
130.97952 100.2242 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 283.77579 m
152.97865 282.27811 l
152.98039 285.27811 l
h
156.97952 283.77579 m
S
CM
114.42984 101.27528 m
115.01597 100.68983 115.01652 99.740082 114.43107 99.153954 c
113.84563 98.567833 112.89587 98.567276 112.30975 99.152725 c
111.72363 99.738174 111.72308 100.68792 112.30853 101.27405 c
112.89397 101.86017 113.84372 101.86072 114.42984 101.27528 c
f
1 0 0 -1 -26 384 cm
140.42984 282.72473 m
141.01596 283.31018 141.01651 284.25992 140.43108 284.84604 c
139.84563 285.43216 138.89587 285.43271 138.30975 284.84729 c
137.72363 284.26184 137.72307 283.31207 138.30852 282.72595 c
138.89397 282.13983 139.84372 282.13928 140.42984 282.72473 c
S
1 J
1 j
0.60000002 i
130.60912 180.36734 m
152.97986 180.60359 l
S
0 i
CM
130.97963 203.35416 m
126.99569 204.89632 l
126.96401 201.89648 l
h
130.97963 203.35416 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97963 180.64584 m
152.9957 179.10368 l
152.964 182.10352 l
h
156.97963 180.64584 m
S
CM
104.181 204.69789 m
104.76057 204.10596 104.75053 203.15627 104.1586 202.57669 c
103.56666 201.99713 102.61697 202.00716 102.03739 202.59909 c
101.45782 203.19104 101.46786 204.14073 102.0598 204.72031 c
102.65174 205.29987 103.60143 205.28984 104.181 204.69789 c
f
1 0 0 -1 -26 384 cm
130.181 179.30211 m
130.76056 179.89404 130.75053 180.84373 130.1586 181.42331 c
129.56665 182.00287 128.61696 181.99284 128.0374 181.40091 c
127.45782 180.80896 127.46786 179.85927 128.0598 179.27969 c
128.65173 178.70013 129.60143 178.71016 130.181 179.30211 c
S
1 J
1 j
0.60000002 i
130.60918 227.33432 m
153.44005 227.45743 l
S
0 i
CM
131.43999 156.521 m
127.44813 158.04254 l
127.43195 155.04259 l
h
131.43999 156.521 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
157.43999 227.479 m
153.44814 225.95746 l
153.43195 228.95741 l
h
157.43999 227.479 m
S
CM
104.17556 157.72868 m
104.75818 157.13976 104.75306 156.19002 104.16412 155.60741 c
103.57519 155.02478 102.62545 155.02991 102.04283 155.61884 c
101.46021 156.20778 101.46533 157.15752 102.05428 157.74013 c
102.64321 158.32274 103.59294 158.31763 104.17556 157.72868 c
f
1 0 0 -1 -26 384 cm
130.17557 226.27132 m
130.75818 226.86024 130.75305 227.80998 130.16412 228.39259 c
129.57518 228.97522 128.62546 228.97009 128.04283 228.38116 c
127.46021 227.79222 127.46533 226.84248 128.05428 226.25987 c
128.6432 225.67726 129.59294 225.68237 130.17557 226.27132 c
S
1 J
1 j
0.60000002 i
131.11485 274.03485 m
152.97981 274.25357 l
S
0 i
CM
130.97961 109.70641 m
126.99482 111.24635 l
126.96481 108.24651 l
h
130.97961 109.70641 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97961 274.29358 m
152.99483 272.75363 l
152.96481 275.75351 l
h
156.97961 274.29358 m
S
CM
104.68615 111.03016 m
105.26604 110.43855 105.25655 109.48885 104.66493 108.90895 c
104.07331 108.32905 103.12361 108.33855 102.54372 108.93017 c
101.96382 109.52178 101.97332 110.47148 102.56493 111.05138 c
103.15656 111.63128 104.10625 111.62178 104.68615 111.03016 c
f
1 0 0 -1 -26 384 cm
130.68616 272.96985 m
131.26605 273.56146 131.25655 274.51117 130.66493 275.09106 c
130.07332 275.67096 129.12361 275.66144 128.54372 275.06982 c
127.96382 274.47821 127.97332 273.5285 128.56494 272.94861 c
129.15656 272.36871 130.10625 272.37823 130.68616 272.96985 c
S
1 J
1 j
0.60000002 i
119.96169 170.66185 m
152.97955 170.7735 l
S
0 i
CM
130.97954 213.21298 m
126.98463 214.7265 l
126.97449 211.72652 l
h
130.97954 213.21298 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97954 170.78702 m
152.98463 169.2735 l
152.97449 172.27348 l
h
156.97954 170.78702 m
S
CM
93.525932 214.4003 m
94.109734 213.81253 94.106522 212.86279 93.518761 212.27899 c
92.931 211.69519 91.981255 211.69839 91.397453 212.28616 c
90.813652 212.87393 90.816864 213.82367 91.404625 214.40747 c
91.992393 214.99127 92.942131 214.98805 93.525932 214.4003 c
f
1 0 0 -1 -26 384 cm
119.52593 169.5997 m
120.10973 170.18747 120.10652 171.13721 119.51876 171.72101 c
118.931 172.30481 117.98125 172.30161 117.39745 171.71384 c
116.81365 171.12607 116.81686 170.17633 117.40462 169.59253 c
117.99239 169.00873 118.94213 169.01195 119.52593 169.5997 c
S
1 J
1 j
0.60000002 i
119.96169 217.52271 m
152.97954 217.60252 l
S
0 i
CM
130.97952 166.3878 m
126.98317 167.89748 l
126.97591 164.89748 l
h
130.97952 166.3878 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97952 217.6122 m
152.98317 216.10252 l
152.97591 219.10252 l
h
156.97952 217.6122 m
S
CM
93.524918 167.53902 m
94.109283 166.95183 94.106987 166.00208 93.519783 165.41771 c
92.932587 164.83334 91.982841 164.83563 91.398476 165.42284 c
90.814102 166.01004 90.816399 166.95978 91.403603 167.54414 c
91.990799 168.12851 92.940544 168.12622 93.524918 167.53902 c
f
1 0 0 -1 -26 384 cm
119.52492 216.46098 m
120.10928 217.04817 120.10699 217.99792 119.51978 218.58229 c
118.93259 219.16666 117.98284 219.16437 117.39848 218.57716 c
116.8141 217.98996 116.8164 217.04022 117.4036 216.45586 c
117.9908 215.87149 118.94054 215.87378 119.52492 216.46098 c
S
1 J
1 j
0.60000002 i
119.96168 263.9303 m
152.97957 264.065 l
S
0 i
CM
130.97954 119.91869 m
126.98569 121.43499 l
126.97345 118.43501 l
h
130.97954 119.91869 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
156.97954 264.08133 m
152.98569 262.565 l
152.97345 265.56497 l
h
156.97954 264.08133 m
S
CM
93.526672 121.13216 m
94.110062 120.54398 94.106186 119.59425 93.518021 119.01085 c
92.929848 118.42746 91.98011 118.43134 91.396713 119.01951 c
90.813324 119.60767 90.8172 120.55742 91.405373 121.14081 c
91.993538 121.7242 92.943283 121.72032 93.526672 121.13216 c
f
1 0 0 -1 -26 384 cm
119.52667 262.86786 m
120.11006 263.45602 120.10619 264.40576 119.51802 264.98914 c
118.92985 265.57254 117.98011 265.56866 117.39671 264.9805 c
116.81332 264.39233 116.8172 263.4426 117.40537 262.85919 c
117.99354 262.27579 118.94328 262.27966 119.52667 262.86786 c
S
1 J
1 j
0.60000002 i
182.2912 170.61829 m
231.53441 170.61829 l
S
0 i
CM
209.53441 213.38171 m
205.53441 214.88171 l
205.53441 211.88171 l
h
209.53441 213.38171 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 170.61829 m
231.53441 169.11829 l
231.53441 172.11829 l
h
235.53441 170.61829 m
S
1 J
1 j
0.60000002 i
182.2912 180.37315 m
231.53441 180.37315 l
S
0 i
CM
209.53441 203.62685 m
205.53441 205.12685 l
205.53441 202.12685 l
h
209.53441 203.62685 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 180.37315 m
231.53441 178.87315 l
231.53441 181.87315 l
h
235.53441 180.37315 m
S
1 J
1 j
0.60000002 i
182.2912 190.12802 m
231.53441 190.12802 l
S
0 i
CM
209.53441 193.87198 m
205.53441 195.37198 l
205.53441 192.37198 l
h
209.53441 193.87198 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 190.12802 m
231.53441 188.62802 l
231.53441 191.62802 l
h
235.53441 190.12802 m
S
1 J
1 j
0.60000002 i
182.2912 217.44164 m
231.53441 217.44164 l
S
0 i
CM
209.53441 166.55836 m
205.53441 168.05836 l
205.53441 165.05836 l
h
209.53441 166.55836 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 217.44164 m
231.53441 215.94164 l
231.53441 218.94164 l
h
235.53441 217.44164 m
S
1 J
1 j
0.60000002 i
182.2912 227.19649 m
231.53441 227.19649 l
S
0 i
CM
209.53441 156.80351 m
205.53441 158.30351 l
205.53441 155.30351 l
h
209.53441 156.80351 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 227.19649 m
231.53441 225.69649 l
231.53441 228.69649 l
h
235.53441 227.19649 m
S
1 J
1 j
0.60000002 i
182.2912 236.95135 m
231.53441 236.95135 l
S
0 i
CM
209.53441 147.04865 m
205.53441 148.54865 l
205.53441 145.54865 l
h
209.53441 147.04865 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 236.95135 m
231.53441 235.45135 l
231.53441 238.45135 l
h
235.53441 236.95135 m
S
1 J
1 j
0.60000002 i
182.2912 264.26498 m
231.53441 264.26498 l
S
0 i
CM
209.53441 119.73503 m
205.53441 121.23503 l
205.53441 118.23503 l
h
209.53441 119.73503 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 264.26498 m
231.53441 262.76498 l
231.53441 265.76498 l
h
235.53441 264.26498 m
S
1 J
1 j
0.60000002 i
182.2912 274.01984 m
231.53441 274.01984 l
S
0 i
CM
209.53441 109.98016 m
205.53441 111.48016 l
205.53441 108.48016 l
h
209.53441 109.98016 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
235.53441 274.01984 m
231.53441 272.51984 l
231.53441 275.51984 l
h
235.53441 274.01984 m
S
1 J
1 j
0.60000002 i
36.168106 292.82614 m
106.15618 292.82614 l
S
0 i
CM
84.156181 91.173859 m
80.156181 92.673859 l
80.156181 89.673859 l
h
84.156181 91.173859 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.15618 292.82614 m
106.15618 291.32614 l
106.15618 294.32614 l
h
110.15618 292.82614 m
S
1 J
1 j
0.60000002 i
36.168106 337.69852 m
106.15618 337.69852 l
S
0 i
CM
84.156181 46.301487 m
80.156181 47.801487 l
80.156181 44.801487 l
h
84.156181 46.301487 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.15618 337.69852 m
106.15618 336.19852 l
106.15618 339.19852 l
h
110.15618 337.69852 m
S
1 J
1 j
0.60000002 i
79.221085 312.30008 m
106.48762 312.30008 l
S
0 i
CM
84.487617 71.699928 m
80.487617 73.199928 l
80.487617 70.199928 l
h
84.487617 71.699928 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.48762 312.30008 m
106.48762 310.80008 l
106.48762 313.80008 l
h
110.48762 312.30008 m
S
1 J
1 j
0.60000002 i
78.889648 322.43625 m
106.15618 322.43625 l
S
0 i
CM
84.156181 61.56374 m
80.156181 63.06374 l
80.156181 60.06374 l
h
84.156181 61.56374 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.15618 322.43625 m
106.15618 320.93625 l
106.15618 323.93625 l
h
110.15618 322.43625 m
S
1 J
1 j
0.60000002 i
98.7994 313.50006 m
98.7994 320.20007 l
98.467964 339.87167 l
98.467964 346.20294 l
106.15618 346.20294 l
S
0 i
CM
84.156181 37.79707 m
80.156181 39.29707 l
80.156181 36.29707 l
h
84.156181 37.79707 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.15618 346.20294 m
106.15618 344.70294 l
106.15618 347.70294 l
h
110.15618 346.20294 m
S
CM
73.647926 70.851395 m
73.179298 70.382767 72.419502 70.382767 71.950874 70.851395 c
71.482246 71.32003 71.482246 72.079826 71.950874 72.548454 c
72.419502 73.017082 73.179298 73.017082 73.647926 72.548454 c
74.116562 72.079826 74.116562 71.32003 73.647926 70.851395 c
f
1 0 0 -1 -26 384 cm
99.647926 313.14859 m
99.179298 313.61722 98.419502 313.61722 97.950874 313.14859 c
97.482246 312.67996 97.482246 311.92017 97.950874 311.45154 c
98.419502 310.98291 99.179298 310.98291 99.647926 311.45154 c
100.11656 311.92017 100.11656 312.67996 99.647926 313.14859 c
S
1 J
1 j
0.60000002 i
88.920738 323.63626 m
88.920738 330.33627 l
88.644508 365.01212 l
106.15618 365.01212 l
S
0 i
CM
84.156181 18.987871 m
80.156181 20.487871 l
80.156181 17.487871 l
h
84.156181 18.987871 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.15618 365.01212 m
106.15618 363.51212 l
106.15618 366.51212 l
h
110.15618 365.01212 m
S
CM
63.769264 60.71521 m
63.300636 60.246582 62.540836 60.246582 62.072208 60.71521 c
61.60358 61.183842 61.60358 61.943638 62.072208 62.412266 c
62.540836 62.880898 63.300636 62.880898 63.769264 62.412266 c
64.237892 61.943638 64.237892 61.183842 63.769264 60.71521 c
f
1 0 0 -1 -26 384 cm
89.769264 323.28479 m
89.300636 323.75342 88.54084 323.75342 88.072205 323.28479 c
87.603577 322.81616 87.603577 322.05637 88.072205 321.58774 c
88.54084 321.11911 89.300636 321.11911 89.769264 321.58774 c
90.237892 322.05637 90.237892 322.81616 89.769264 323.28479 c
S
/Cs2 SC
0 sc
1 0 0 -1 33.743805 291.30951 cm
-13.914104 2.8880005 m
(!"#A%'@)[ 4.296000 4.144000 4.000000 4.144000 4.448000 4.000000 0.000000 ] xS
1 0 0 -1 36.840973 281.55466 cm
-18.067274 2.8880005 m
(!"#>"-#B?)[ 4.296000 4.144000 4.000000 4.448000 4.144000 2.520000 4.000000 4.744000 0.000000 ] xS
1 0 0 -1 27.403721 125.19052 cm
-13.927144 2.8880005 m
(\)\(#$%$$&!)[ 1.776000 4.744000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 23.274162 115.22712 cm
-9.7975855 2.8880005 m
(\)\(#\)>'-.)[ 1.776000 4.744000 4.000000 1.776000 4.448000 4.000000 2.520000 0.000000 ] xS
1 0 0 -1 22.930033 96.91568 cm
-9.453455 2.8880005 m
(\)\(#0B8)[ 1.776000 4.744000 4.000000 4.592000 4.744000 0.000000 ] xS
1 0 0 -1 22.930033 52.043308 cm
-9.453455 2.8880005 m
(\)\(#0B=)[ 1.776000 4.744000 4.000000 4.592000 4.744000 0.000000 ] xS
1 0 0 -1 59.999859 76.76149 cm
-7.7481565 2.8880005 m
(C$#.)[ 6.064000 4.744000 4.000000 0.000000 ] xS
1 0 0 -1 59.770206 67.592018 cm
-7.5317669 2.8880005 m
(!"#.)[ 4.296000 4.144000 4.000000 0.000000 ] xS
1 0 0 -1 168.76704 217.86227 cm
-6.0121565 2.8880005 m
(\(\)*#.)[ 4.744000 1.776000 4.000000 4.000000 0.000000 ] xS
1 0 0 -1 173.92899 198.56967 cm
-11.174105 2.8880005 m
(\(\)*#'-,&&)[ 4.744000 1.776000 4.000000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
1 0 0 -1 178.40268 208.10742 cm
-15.647794 2.8880005 m
(\(\)*#$%$$&!)[ 4.744000 1.776000 4.000000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 169.79944 171.47318 cm
-7.0445461 2.8880005 m
(+%&#.)[ 6.824000 4.448000 1.776000 4.000000 0.000000 ] xS
1 0 0 -1 174.96138 152.18056 cm
-12.206494 2.8880005 m
(+%&#'-,&&)[ 6.824000 4.448000 1.776000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
1 0 0 -1 179.43507 161.71831 cm
-16.680183 2.8880005 m
(+%&#$%$$&!)[ 6.824000 4.448000 1.776000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 168.76704 124.64983 cm
-6.0121565 2.8880005 m
(,&%#.)[ 4.296000 1.776000 4.448000 4.000000 0.000000 ] xS
1 0 0 -1 178.40268 114.89497 cm
-15.647794 2.8880005 m
(,&%#$%$$&!)[ 4.296000 1.776000 4.448000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
1 0 0 -1 173.58485 312.01239 cm
-10.829975 2.8880005 m
(&'%#'-,&&)[ 1.776000 4.000000 4.448000 4.000000 4.000000 2.520000 4.296000 1.776000 0.000000 ] xS
1 0 0 -1 31.25786 85.930542 cm
-17.781284 2.8880005 m
(0B8DE.0+DF5)[ 4.592000 4.744000 5.184000 3.112000 2.368000 2.520000 4.592000 6.824000 3.112000 5.480000 0.000000 ] xS
1 0 0 -1 168.76704 331.9321 cm
-6.0121565 2.8880005 m
(&'%#.)[ 1.776000 4.000000 4.448000 4.000000 0.000000 ] xS
1 0 0 -1 178.05855 322.17725 cm
-15.303663 2.8880005 m
(&'%#$%$$&!)[ 1.776000 4.000000 4.448000 4.000000 4.744000 4.448000 4.744000 4.744000 1.776000 0.000000 ] xS
/Cs1 SC
0.82890397 0.87453902 0.93533999 sc
CM
86.056183 52.154404 m
86.056183 13.134953 l
103.61494 19.638195 l
103.61494 45.651161 l
h
86.056183 52.154404 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -26 384 cm
112.05618 331.84558 m
112.05618 370.86505 l
129.61493 364.36182 l
129.61493 338.34885 l
h
112.05618 331.84558 m
S
35.854477 355.36758 m
106.2359 355.36758 l
S
0 i
CM
84.235901 28.632408 m
80.235901 30.132408 l
80.235901 27.132408 l
h
84.235901 28.632408 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.2359 355.36758 m
106.2359 353.86758 l
106.2359 356.86758 l
h
110.2359 355.36758 m
S
/Cs2 SC
0 sc
1 0 0 -1 37.380329 33.739971 cm
-23.903753 2.8880005 m
(0B=DE.0+DF5)[ 4.592000 4.744000 5.480000 3.112000 2.368000 2.520000 4.592000 6.824000 3.112000 5.480000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -26 384 cm
35.854477 302.83633 m
106.2359 302.83633 l
S
0 i
CM
84.235901 81.163681 m
80.235901 82.663681 l
80.235901 79.663681 l
h
84.235901 81.163681 m
f
0 J
0 j
1 0 0 -1 -26 384 cm
110.2359 302.83633 m
106.2359 301.33633 l
106.2359 304.33633 l
h
110.2359 302.83633 m
S
/Cs2 SC
0 sc
1 0 0 -1 93.231216 32.832233 cm
/F2.1[ 7 0 0 -7 0 0]sf
-5.6680264 2.9020004 m
(GB=)[ 5.320000 4.151000 0.000000 ] xS
1 0 0 -1 93.029358 77.59211 cm
-5.6680264 2.9020004 m
(GB8)[ 5.320000 4.151000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
